{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { uuid4 } from '../util';\n\nvar DevicePluginWeb =\n/** @class */\nfunction (_super) {\n  __extends(DevicePluginWeb, _super);\n\n  function DevicePluginWeb() {\n    return _super.call(this, {\n      name: 'Device',\n      platforms: ['web']\n    }) || this;\n  }\n\n  DevicePluginWeb.prototype.getInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ua, uaFields;\n      return __generator(this, function (_a) {\n        ua = navigator.userAgent;\n        uaFields = this.parseUa(ua);\n        return [2\n        /*return*/\n        , Promise.resolve({\n          model: uaFields.model,\n          platform: 'web',\n          appVersion: '',\n          appBuild: '',\n          appId: '',\n          appName: '',\n          operatingSystem: uaFields.operatingSystem,\n          osVersion: uaFields.osVersion,\n          manufacturer: navigator.vendor,\n          isVirtual: false,\n          uuid: this.getUid()\n        })];\n      });\n    });\n  };\n\n  DevicePluginWeb.prototype.getBatteryInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var battery, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            battery = {};\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , navigator.getBattery()];\n\n          case 2:\n            battery = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            , Promise.resolve({\n              batteryLevel: battery.level,\n              isCharging: battery.charging\n            })];\n        }\n      });\n    });\n  };\n\n  DevicePluginWeb.prototype.getLanguageCode = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , {\n          value: navigator.language\n        }];\n      });\n    });\n  };\n\n  DevicePluginWeb.prototype.parseUa = function (_ua) {\n    var uaFields = {};\n    var start = _ua.indexOf('(') + 1;\n\n    var end = _ua.indexOf(') AppleWebKit');\n\n    if (_ua.indexOf(') Gecko') !== -1) {\n      end = _ua.indexOf(') Gecko');\n    }\n\n    var fields = _ua.substring(start, end);\n\n    if (_ua.indexOf('Android') !== -1) {\n      uaFields.model = fields.replace('; wv', '').split('; ').pop().split(' Build')[0];\n      uaFields.osVersion = fields.split('; ')[1];\n    } else {\n      uaFields.model = fields.split('; ')[0];\n\n      if (navigator.oscpu) {\n        uaFields.osVersion = navigator.oscpu;\n      } else {\n        if (_ua.indexOf('Windows') !== -1) {\n          uaFields.osVersion = fields;\n        } else {\n          var lastParts = fields.split('; ').pop().replace(' like Mac OS X', '').split(' ');\n          uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n        }\n      }\n    }\n\n    if (/android/i.test(_ua)) {\n      uaFields.operatingSystem = 'android';\n    } else if (/iPad|iPhone|iPod/.test(_ua) && !window.MSStream) {\n      uaFields.operatingSystem = 'ios';\n    } else if (/Win/.test(_ua)) {\n      uaFields.operatingSystem = 'windows';\n    } else if (/Mac/i.test(_ua)) {\n      uaFields.operatingSystem = 'mac';\n    } else {\n      uaFields.operatingSystem = 'unknown';\n    }\n\n    return uaFields;\n  };\n\n  DevicePluginWeb.prototype.getUid = function () {\n    var uid = window.localStorage.getItem('_capuid');\n\n    if (uid) {\n      return uid;\n    }\n\n    uid = uuid4();\n    window.localStorage.setItem('_capuid', uid);\n    return uid;\n  };\n\n  return DevicePluginWeb;\n}(WebPlugin);\n\nexport { DevicePluginWeb };\nvar Device = new DevicePluginWeb();\nexport { Device };","map":{"version":3,"sources":["../../../src/web/device.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { uuid4 } from '../util';\nvar DevicePluginWeb = /** @class */ (function (_super) {\n    __extends(DevicePluginWeb, _super);\n    function DevicePluginWeb() {\n        return _super.call(this, {\n            name: 'Device',\n            platforms: ['web']\n        }) || this;\n    }\n    DevicePluginWeb.prototype.getInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var ua, uaFields;\n            return __generator(this, function (_a) {\n                ua = navigator.userAgent;\n                uaFields = this.parseUa(ua);\n                return [2 /*return*/, Promise.resolve({\n                        model: uaFields.model,\n                        platform: 'web',\n                        appVersion: '',\n                        appBuild: '',\n                        appId: '',\n                        appName: '',\n                        operatingSystem: uaFields.operatingSystem,\n                        osVersion: uaFields.osVersion,\n                        manufacturer: navigator.vendor,\n                        isVirtual: false,\n                        uuid: this.getUid()\n                    })];\n            });\n        });\n    };\n    DevicePluginWeb.prototype.getBatteryInfo = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var battery, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        battery = {};\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, navigator.getBattery()];\n                    case 2:\n                        battery = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, Promise.resolve({\n                            batteryLevel: battery.level,\n                            isCharging: battery.charging\n                        })];\n                }\n            });\n        });\n    };\n    DevicePluginWeb.prototype.getLanguageCode = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, {\n                        value: navigator.language\n                    }];\n            });\n        });\n    };\n    DevicePluginWeb.prototype.parseUa = function (_ua) {\n        var uaFields = {};\n        var start = _ua.indexOf('(') + 1;\n        var end = _ua.indexOf(') AppleWebKit');\n        if (_ua.indexOf(') Gecko') !== -1) {\n            end = _ua.indexOf(') Gecko');\n        }\n        var fields = _ua.substring(start, end);\n        if (_ua.indexOf('Android') !== -1) {\n            uaFields.model = fields.replace('; wv', '').split('; ').pop().split(' Build')[0];\n            uaFields.osVersion = fields.split('; ')[1];\n        }\n        else {\n            uaFields.model = fields.split('; ')[0];\n            if (navigator.oscpu) {\n                uaFields.osVersion = navigator.oscpu;\n            }\n            else {\n                if (_ua.indexOf('Windows') !== -1) {\n                    uaFields.osVersion = fields;\n                }\n                else {\n                    var lastParts = fields.split('; ').pop().replace(' like Mac OS X', '').split(' ');\n                    uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n                }\n            }\n        }\n        if (/android/i.test(_ua)) {\n            uaFields.operatingSystem = 'android';\n        }\n        else if (/iPad|iPhone|iPod/.test(_ua) && !window.MSStream) {\n            uaFields.operatingSystem = 'ios';\n        }\n        else if (/Win/.test(_ua)) {\n            uaFields.operatingSystem = 'windows';\n        }\n        else if (/Mac/i.test(_ua)) {\n            uaFields.operatingSystem = 'mac';\n        }\n        else {\n            uaFields.operatingSystem = 'unknown';\n        }\n        return uaFields;\n    };\n    DevicePluginWeb.prototype.getUid = function () {\n        var uid = window.localStorage.getItem('_capuid');\n        if (uid) {\n            return uid;\n        }\n        uid = uuid4();\n        window.localStorage.setItem('_capuid', uid);\n        return uid;\n    };\n    return DevicePluginWeb;\n}(WebPlugin));\nexport { DevicePluginWeb };\nvar Device = new DevicePluginWeb();\nexport { Device };\n//# sourceMappingURL=device.js.map"]},"metadata":{},"sourceType":"module"}