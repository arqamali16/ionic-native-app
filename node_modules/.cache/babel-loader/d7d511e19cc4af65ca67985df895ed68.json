{"ast":null,"code":"/**\n * @private\n */\nexport function get(element, path) {\n  var paths = path.split('.');\n  var obj = element;\n\n  for (var i = 0; i < paths.length; i++) {\n    if (!obj) {\n      return null;\n    }\n\n    obj = obj[paths[i]];\n  }\n\n  return obj;\n}\n/**\n * @private\n */\n\nexport function getPromise(callback) {\n  if (callback === void 0) {\n    callback = function callback() {};\n  }\n\n  var tryNativePromise = function tryNativePromise() {\n    if (typeof Promise === 'function' || typeof window !== 'undefined' && window.Promise) {\n      return new Promise(function (resolve, reject) {\n        callback(resolve, reject);\n      });\n    } else {\n      console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.');\n    }\n  };\n\n  return tryNativePromise();\n}","map":{"version":3,"sources":["../../../src/@ionic-native/core/util.ts"],"names":[],"mappings":"AAEA;;AAEG;AACH,OAAM,SAAU,GAAV,CAAc,OAAd,EAAyC,IAAzC,EAAqD;AACzD,MAAM,KAAK,GAAa,IAAI,CAAC,KAAL,CAAW,GAAX,CAAxB;AACA,MAAI,GAAG,GAAQ,OAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,QAAI,CAAC,GAAL,EAAU;AACR,aAAO,IAAP;AACD;;AACD,IAAA,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT;AACD;;AACD,SAAO,GAAP;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,UAAV,CAAqB,QAArB,EAAkD;AAA7B,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,oBAAA,CAA6B,CAA7B;AAA6B;;AACtD,MAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAA;AACvB,QAAI,OAAO,OAAP,KAAmB,UAAnB,IAAkC,OAAO,MAAP,KAAkB,WAAlB,IAAiC,MAAM,CAAC,OAA9E,EAAwF;AACtF,aAAO,IAAI,OAAJ,CAAiB,UAAC,OAAD,EAAU,MAAV,EAAgB;AACtC,QAAA,QAAQ,CAAC,OAAD,EAAU,MAAV,CAAR;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACL,MAAA,OAAO,CAAC,KAAR,CACE,0LADF;AAGD;AACF,GAVD;;AAYA,SAAO,gBAAgB,EAAvB;AACD","sourcesContent":["declare const window: any;\n\n/**\n * @private\n */\nexport function get(element: Element | Window, path: string) {\n  const paths: string[] = path.split('.');\n  let obj: any = element;\n  for (let i = 0; i < paths.length; i++) {\n    if (!obj) {\n      return null;\n    }\n    obj = obj[paths[i]];\n  }\n  return obj;\n}\n\n/**\n * @private\n */\nexport function getPromise(callback: Function = () => {}): Promise<any> {\n  const tryNativePromise = () => {\n    if (typeof Promise === 'function' || (typeof window !== 'undefined' && window.Promise)) {\n      return new Promise<any>((resolve, reject) => {\n        callback(resolve, reject);\n      });\n    } else {\n      console.error(\n        'No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular or on a recent browser.'\n      );\n    }\n  };\n\n  return tryNativePromise();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}